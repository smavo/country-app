{"version":3,"sources":["Components/wrapper.js","Components/Header.js","Components/Country.js","Components/CountryList.js","Components/RegionFilter.js","Components/NameFilter.js","Components/ActionList.js","Components/CountryDetail.js","Components/loading.js","Components/CountryPage.js","App.js","assets/JS/reducer.js","serviceWorker.js","index.js"],"names":["WrapperStyled","styled","div","Wrapper","children","HeaderStyled","header","Header","setDarkMode","darkMode","className","to","onClick","CountryStyled","Country","flag","name","population","region","capital","alpha2Code","history","useHistory","push","toLowerCase","loading","src","alt","CountryListStyled","CountryList","dispatch","useDispatch","countryList","useSelector","state","length","countryListByRegion","countryListByName","useEffect","fetch","then","response","json","list","type","payload","catch","console","log","map","numericCode","key","RegionFilterStyled","select","RegionFilter","value","onChange","event","target","NameFilterStyled","label","NameFilter","placeholder","ActionListStyled","ActionList","CounttyDetailStyled","article","CountryDetail","nativeName","subregion","topLevelDomain","currencies","languages","borders","concatStr","datos","strContact","forEach","element","index","border","LodingStyled","Loading","CountryPageStyled","CountryPage","match","country","params","id","e","goBack","store","createStore","action","filter","includes","error","countryListFilter","undefined","App","useState","setChecked","mainClass","changeMedia","mq","matches","window","matchMedia","addListener","path","component","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.5e88ca03.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst WrapperStyled = styled.div`\n  padding: 0 1.5em;\n  max-width: 1280px;\n  margin: 0 auto;\n`;\n\nfunction Wrapper({ children }) {\n  return <WrapperStyled>{children}</WrapperStyled>;\n}\n\nexport default Wrapper;\n","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport { Link } from 'react-router-dom';\r\nimport Wrapper from \"./wrapper\";\r\n\r\nconst HeaderStyled = styled.header`\r\n    color: var(--black);\r\n    background-color: var(--white);\r\n    box-shadow: 0 2px 4px 0px rgba(0,0,0,0.06);\r\n    margin-bottom: 1.5em;\r\n    .row {\r\n      height: 80px;\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n    }\r\n    h1 {\r\n      font-size: 0.9em;\r\n      a {\r\n        text-decoration: none;\r\n        color: var(--black);\r\n      }\r\n    }\r\n    .darkmode {\r\n      font-weight: 600;\r\n      p {\r\n        display: flex;\r\n        align-items: center;\r\n        font-size: 14px;\r\n        cursor: pointer;\r\n      }\r\n      .darkmode__icon {\r\n        transform: rotate(-25deg);\r\n        margin-right: 10px;\r\n        width: 15px;\r\n        height: 15px;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n      }\r\n    }\r\n    @media screen and (min-width: 768px) {\r\n      margin-bottom: 3em;\r\n      h1 {\r\n        font-size: 1.5em;\r\n      }\r\n      .darkmode {\r\n        p {\r\n          font-size: 16px;\r\n        }\r\n      }\r\n    }\r\n  `;\r\n\r\nfunction Header({ setDarkMode, darkMode }) {\r\n    function handleClick() {\r\n        setDarkMode(!darkMode);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <HeaderStyled>\r\n                <Wrapper>\r\n                    <div className=\"row\">\r\n                        <h1>\r\n                            <Link to=\"/\">Where in the world?</Link>\r\n                        </h1>\r\n                        <div className=\"darkmode\">\r\n                            <p onClick={handleClick}>\r\n                                <span className=\"darkmode__icon\">\r\n                                    <i className={`fp-moon-${darkMode ? \"dark\" : \"light\"}`}></i>\r\n                                </span>  Dark Mode\r\n                        </p>\r\n                        </div>\r\n                    </div>\r\n                </Wrapper>\r\n            </HeaderStyled>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react'\r\nimport styled from \"styled-components\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst CountryStyled = styled.div`\r\n    text-align: left;\r\n    border-radius: 5px;\r\n    background-color: var(--white);\r\n    overflow: hidden;\r\n    box-shadow: 0 0 7px 2px rgba(0, 0, 0, 0.03);\r\n    cursor: pointer;\r\n    box-sizing: border-box;\r\n    border: 0.1px solid transparent;\r\n    transition: all .3s ease-in-out;\r\n    :hover {\r\n        border: 1px solid var(--grey-dark);\r\n        box-shadow: 0 7px 7px 2px rgba(0, 0, 0, 0.1);\r\n        transform: translateY(-5px)\r\n    }\r\n    h2 {\r\n        margin: 0 0 1rem;\r\n        font-size: 1.1em;\r\n    }\r\n    p {\r\n        font-size: 0.9em;\r\n        margin: 0 0 0.5rem;\r\n    }\r\n    img {\r\n        width: 100%;\r\n        height: 160px;\r\n        object-fit: cover;\r\n    }\r\n    .details {\r\n        padding: 1.5em 1.5em 2em;\r\n    }\r\n`;\r\n\r\nfunction Country({ flag, name, population, region, capital, alpha2Code }) {\r\n    const history = useHistory();\r\n\r\n    function handleClick() {\r\n        history.push(`/country/${alpha2Code.toLowerCase()}`);\r\n    }\r\n    return (\r\n        <CountryStyled onClick={handleClick}>\r\n            <img loading=\"lazy\" src={flag} alt={name} />\r\n            <div className=\"details\">\r\n                <h2>{name}</h2>\r\n                <p>\r\n                    <strong>Population:</strong> {population}\r\n                </p>\r\n                <p>\r\n                    <strong>Region:</strong> {region}\r\n                </p>\r\n                <p>\r\n                    <strong>Capital:</strong> {capital}\r\n                </p>\r\n            </div>\r\n        </CountryStyled>\r\n    );\r\n}\r\n\r\nexport default Country\r\n","import React, { useEffect } from 'react'\r\n// import Country from \"./country\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport Wrapper from \"./wrapper\";\r\nimport styled from \"styled-components\";\r\nimport Country from \"./Country\";\r\n\r\nconst CountryListStyled = styled.div`\r\n    .row {\r\n        display: grid;\r\n        justify-content: center;\r\n        grid-row-gap: 2.3em;\r\n        grid-column-gap: 80px;\r\n        grid-auto-flow: columns;\r\n        grid-template-columns: repeat(auto-fill, 260px);\r\n    }\r\n`;\r\n\r\nfunction CountryList() {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const countryList = useSelector((state) => {\r\n        if (state.region !== \"none\" && state.name.length === 0) {\r\n            return state.countryListByRegion;\r\n        }\r\n        if (state.name.length > 0) {\r\n            return state.countryListByName;\r\n        }\r\n\r\n        return state.countryList;\r\n    });\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://restcountries.eu/rest/v2/all\")\r\n            .then((response) => {\r\n                return response.json();\r\n            })\r\n            .then((list) => {\r\n                dispatch({\r\n                    type: \"SET_COUNTRY_LIST\",\r\n                    payload: list,\r\n                });\r\n                //console.log(list);\r\n                //setCountryList(data);\r\n            })\r\n            .catch(() => {\r\n                console.log(\"hubo un error, que dolor que dolor que pena\");\r\n            });\r\n    }, []);\r\n\r\n    return (\r\n        <CountryListStyled>\r\n            <Wrapper>\r\n                <div className=\"row\">\r\n                    {countryList.length > 0 ? (\r\n                        countryList.map(\r\n                            ({ name, population, flag, region, capital, numericCode, alpha2Code }) => {\r\n                                return (\r\n                                    <Country\r\n                                        key={numericCode}\r\n                                        flag={flag}\r\n                                        name={name}\r\n                                        population={population}\r\n                                        region={region}\r\n                                        capital={capital}\r\n                                        alpha2Code={alpha2Code}\r\n                                    />\r\n                                );\r\n                            }\r\n                        )\r\n                    ) : (\r\n                            <p>No encontramos ese pais...</p>\r\n                        )}\r\n                </div>\r\n            </Wrapper>\r\n        </CountryListStyled>\r\n    )\r\n}\r\n\r\nexport default CountryList;\r\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst RegionFilterStyled = styled.select`\n  height: 48px;\n  padding: 0 1em;\n  border: none;\n  border-radius: 5px;\n  box-shadow: 0 2px 9px 0px rgba(0,0,0,0.05);\n  background-color: var(--white);\n  color: var(--black);\n`;\n\nfunction RegionFilter() {\n  const dispatch = useDispatch();\n  const region = useSelector((state) => state.region );\n\n  function handleChange(event) {\n    dispatch({\n      type: 'SET_REGION',\n      payload: event.target.value\n    })\n  }\n  \n  return <RegionFilterStyled value={region} onChange={handleChange}>\n      <option value=\"none\">Filter by Region</option>\n      <option value=\"Africa\">Africa</option>\n      <option value=\"Americas\">America</option>\n      <option value=\"Asia\">Asia</option>\n      <option value=\"Europe\">Europa</option>\n      <option value=\"Oceania\">Oceania</option>\n  </RegionFilterStyled>;\n}\n\nexport default RegionFilter;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst NameFilterStyled = styled.label`\n  display: grid;\n  grid-template: 1fr / 80px 1fr;\n  color: var(--grey-dark);\n  background-color: var(--white);\n  box-shadow: 0 2px 9px 0 rgba(0, 0, 0, 0.05);\n  border-radius: 5px;\n  position: relative;\n  .clean {\n    position: absolute;\n    font-size: 18px;\n    right: 15px;\n    top: 10px;\n    cursor: pointer;\n    :hover {\n      color: var(--black);\n    }\n  }\n  input {\n    -webkit-appearance: none;\n    appearance: none;\n    border: none;\n    font-size: 0.8em;\n    height: 48px;\n    background-color: var(--white);\n    color: var(--grey-dark);\n    padding-right: 40px;\n    box-sizing: border-box;\n    ::placeholder {\n      opacity: 1;\n      color: var(--grey-placeholder);\n    }\n    :focus {\n      border: none;\n      outline: none;\n    }\n  }\n  i {\n    color: var(--grey-placeholder);\n    font-weight: bold;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  \n`;\n\nfunction NameFilter() {\n  const dispatch = useDispatch();\n  const name = useSelector((state) => state.name);\n\n  function handleChange(event) {\n    dispatch({\n      type: \"SET_NAME\",\n      payload: event.target.value,\n    });\n  }\n  function cleanInput(event) {\n    dispatch({\n      type: \"SET_NAME\",\n      payload: \"\",\n    });\n  }\n\n  return (\n    <NameFilterStyled>\n      <i className=\"fp-search\"></i>\n      <input\n        name=\"search\"\n        type=\"text\"\n        value={name}\n        onChange={handleChange}\n        placeholder=\"Search for a country...\"\n      />\n      {name.length > 0 && (\n        <span onClick={cleanInput} className=\"clean\">\n          x\n        </span>\n      )}\n    </NameFilterStyled>\n  );\n}\n\nexport default NameFilter;\n","import React from 'react'\r\nimport Wrapper from \"./wrapper\";\r\n\r\nimport styled from \"styled-components\";\r\nimport RegionFilter from \"./RegionFilter\";\r\nimport NameFilter from \"./NameFilter\";\r\n\r\nconst ActionListStyled = styled.div`\r\n    .row {\r\n        display: grid;\r\n        grid-gap: 2.5em 0;\r\n        margin-bottom: 2.5em;\r\n    }\r\n    @media screen and (min-width: 768px) {\r\n        .row {\r\n        grid-template-columns: 480px 200px;\r\n        justify-content: space-between;\r\n        margin-bottom: 3em;\r\n        }\r\n    }\r\n`;\r\n\r\nfunction ActionList() {\r\n    return (\r\n        <>\r\n            <ActionListStyled>\r\n                <Wrapper>\r\n                    <div className=\"row\">\r\n                        <NameFilter />\r\n                        <RegionFilter />\r\n                    </div>\r\n                </Wrapper>\r\n            </ActionListStyled>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ActionList;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst CounttyDetailStyled = styled.article`\n  display: grid;\n  figure {\n    margin: 0 0 3rem;\n    font-size: 0;\n    width: 100%;\n    img {\n      width: 100%;\n      object-fit: cover;\n      object-position: center;\n    }\n  }\n  .title {\n    margin: 0 0 2rem;\n    font-size: 1.4em;\n  }\n  .subtitle {\n    font-weight: 600;\n    margin: 0 0 1rem;\n    font-size: 1rem;\n    width: 100%;\n  }\n  p {\n    font-size: 0.8rem;\n    margin: 0 0 1rem;\n    span {\n      font-weight: 600;\n    }\n  }\n  .details {\n    display: grid;\n    grid-row-gap: 2.5rem;\n    margin-bottom: 2rem;\n    .detail__left {\n    }\n    .detail__right {\n    }\n  }\n  .borders {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: flex-start;\n    align-items: center;\n    span {\n      margin-right: 10px;\n      margin-bottom: 10px;\n      text-decoration: none;\n      background-color: var(--white);\n      color: var(--black);\n      box-shadow: 0 0px 7px rgba(0, 0, 0, 0.2);\n      border: none;\n      font-size: 0.7rem;\n      padding: 0.5rem 2rem;\n      display: inline-flex;\n      justify-content: center;\n      align-items: center;\n      border-radius: 3px;\n      outline: none;\n    }\n  }\n\n  @media screen and (min-width: 1024px) {\n    grid-template-columns: 1fr 1fr;\n    grid-column-gap: 120px;\n    align-items: center;\n    .details {\n      grid-template-columns: 1fr 1fr;\n    }\n    figure {\n      margin: 0;\n    }\n    .borders {\n      align-items: flex-start;\n    }\n    .subtitle {\n      width: auto;\n      margin-bottom:0;\n      margin-right: 20px;\n      line-height: 31px;\n    }\n  }\n`;\n\nfunction CountryDetail({\n  name,\n  flag,\n  nativeName,\n  population,\n  region,\n  subregion,\n  capital,\n  topLevelDomain,\n  currencies = [],\n  languages = [],\n  borders = [],\n}) {\n  function concatStr(datos) {\n    let strContact = \"\";\n    datos.forEach((element, index) => {\n      if (index + 1 !== datos.length) {\n        strContact += `${element.name}, `;\n      } else {\n        strContact += `${element.name}`;\n      }\n    });\n    return strContact;\n  }\n\n  return (\n    <CounttyDetailStyled>\n      <figure>\n        <img loading=\"lazy\" src={flag} alt={name} />\n      </figure>\n      <div className=\"content\">\n        <h2 className=\"title\">{name}</h2>\n        <div className=\"details\">\n          <div className=\"details__left\">\n            <p>\n              <span>Native Name:</span> {nativeName}\n            </p>\n            <p>\n              <span>Population:</span> {population}\n            </p>\n            <p>\n              <span>Region:</span> {region}\n            </p>\n            <p>\n              <span>Sub Region:</span> {subregion}\n            </p>\n            <p>\n              <span>Capital:</span> {capital}\n            </p>\n          </div>\n          <div className=\"details__right\">\n            <p>\n              <span>Top Level Domain:</span> {topLevelDomain}\n            </p>\n            <p>\n              <span>Currencies:</span> {concatStr(currencies)}\n            </p>\n            <p>\n              <span>Langueages:</span> {concatStr(languages)}\n            </p>\n          </div>\n        </div>\n        {\n          borders.length > 0 && <div className=\"borders\">\n            <h3 className=\"subtitle\">Border Countries:</h3>\n            {borders.map((border) => (\n              <span to=\"/\" key={border}>\n                {border}\n              </span>\n            ))}\n          </div>\n        }\n      </div>\n    </CounttyDetailStyled>\n  );\n}\n\nexport default CountryDetail;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst LodingStyled = styled.div``;\n\nfunction Loading() {\n  return <LodingStyled>Cargando Datos....</LodingStyled>;\n}\n\nexport default Loading;\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport CountryDetail from \"./CountryDetail\";\nimport Loading from \"./loading\";\nimport Wrapper from \"./wrapper\";\n\nconst CountryPageStyled = styled.div`\n  .row {\n    padding: 1.2em 0em;\n    max-width: 500px;\n    margin: 0 auto;\n  }\n  .back {\n    background-color: var(--white);\n    color: var(--black);\n    box-shadow: 0 2px 9px 0px rgba(0,0,0,0.25);\n    border: none;\n    padding: 0.7em 2em;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 3px;\n    margin-bottom: 5em;\n    cursor: pointer;\n    outline: none;\n    transition: transform .3s ease-in-out, box-shadow .3s ease-in-out ;\n    :hover {\n      transform: translateY(-3px);\n      box-shadow: 0 7px 5px 0px rgba(0,0,0,0.25);\n    }\n    :focus,\n    :active {\n      border: none;\n      transform: translateY(0px);\n      box-shadow: 0 0 5px 0px rgba(0,0,0,0.15);\n      transition: transform .1s ease-in-out, box-shadow .1s ease-in-out ;\n    }\n    i {\n      margin-right: 10px;\n      font-size: 1.2em;\n    }\n  }\n  @media screen and (min-width: 1024px) {\n    .row {\n      max-width: 100%;\n    }\n  }\n`;\n\nfunction CountryPage({ match, history }) {\n  const dispatch = useDispatch();\n  const country = useSelector((state) => state.country);\n\n  //console.log(match.params.id);\n  \n  useEffect(() => {\n    fetch(\n      /*`https://restcountries.eu/rest/v2/name/${match.params.id.split('-').join(' ')}`*/\n      `https://restcountries.eu/rest/v2/alpha/${match.params.id}`\n    )\n      .then((response) => {\n        return response.json();\n      })\n      .then((country) => {\n        dispatch({\n          type: \"GET_COUNTRY\",\n          payload: country,\n        });\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }, []);\n\n  function handleClick() {\n    history.goBack();\n    dispatch({\n      type: \"GET_COUNTRY\",\n      payload: [],\n    });\n  }\n\n  return (\n    <CountryPageStyled>\n      <Wrapper>\n        <div className=\"row\">\n          <button className=\"back\" to=\"/\" onClick={handleClick}>\n            <i className=\"fp-long-arrow-left\"></i>Back\n          </button>\n\n          {country.length === 0 ? (\n            <Loading />\n          ) : (\n            <CountryDetail {...country} />\n          )}\n        </div>\n      </Wrapper>\n    </CountryPageStyled>\n  );\n}\n\nexport default CountryPage;\n","import React, { useState, useEffect } from 'react';\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reducer from './assets/JS/reducer';\n\nimport \"./assets/CSS/App.css\";\n\nimport Header from \"./Components/Header\";\nimport CountryList from './Components/CountryList';\nimport ActionList from './Components/ActionList';\n\nimport CountryPage from './Components/CountryPage';\n\nconst initialState = {\n  error: \"\",\n  country: [],\n  countryList: [],\n  countryListByRegion: [],\n  countryListByName: [],\n  countryListFilter: [],\n  region: \"none\",\n  name: \"\",\n};\n\nconst store = createStore(reducer, initialState);\n\nfunction App() {\n  /*  Darkmode - LigthMode*/\n  const [darkMode, setDarkMode] = useState(false);\n  const [checked, setChecked] = useState(false);\n  const mainClass = darkMode ? \"is__darkmode\" : \"is__ligthmode\";\n\n  function changeMedia(mq) {\n    setDarkMode(mq.matches);\n    setChecked(mq.matches);\n  }\n\n  useEffect(() => {\n    const mq = window.matchMedia(\"(prefers-color-scheme: dark)\");\n    mq.addListener(changeMedia);\n    setDarkMode(mq.matches);\n    setChecked(mq.matches);\n  }, []);\n\n  return (\n    <main className={mainClass}>\n      <Provider store={store}>\n        <Router>\n          <Header setDarkMode={setDarkMode} darkMode={darkMode} />\n          <Switch>\n            <Route path=\"/country/:id\" component={CountryPage} />\n            <Route path='/'>\n              <ActionList />\n              <CountryList />\n            </Route>\n          </Switch>\n        </Router>\n      </Provider>\n    </main>\n  );\n}\n\nexport default App;\n","export default function reducer(state, action) {\r\n    switch (action.type) {\r\n        case \"SET_COUNTRY_LIST\": {\r\n            return { ...state, countryList: action.payload };\r\n        }\r\n        case \"SET_REGION\": {\r\n            let countryListByRegion = state.countryList.filter(\r\n                (country) => country.region === action.payload\r\n            );\r\n\r\n            return {\r\n                ...state,\r\n                region: action.payload,\r\n                countryListByRegion,\r\n            };\r\n        }\r\n        case \"SET_NAME\": {\r\n            let list;\r\n            if (state.region !== \"none\") {\r\n                list = state.countryListByRegion;\r\n            } else {\r\n                list = state.countryList;\r\n            }\r\n\r\n            let countryListByName = list.filter((country) =>\r\n                country.name.toLowerCase().includes(action.payload.toLowerCase())\r\n            );\r\n            return {\r\n                ...state,\r\n                countryListByName,\r\n                name: action.payload,\r\n            };\r\n        }\r\n        case \"SET_ERROR\": {\r\n            return { ...state, error: action.payload };\r\n        }\r\n        case \"GET_COUNTRY\": {\r\n            return { ...state, country: action.payload };\r\n        }\r\n        case \"SET_FILTER\": {\r\n            let countryListFilter = state.countryList.filter((country) => {\r\n                let isFilter =\r\n                    country.name\r\n                        .toLowerCase()\r\n                        .includes(\r\n                            action.payload.name\r\n                                ? action.payload.name.toLowerCase()\r\n                                : undefined\r\n                        ) || country.region === action.payload.region;\r\n                return isFilter;\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                countryListFilter,\r\n                region: action.payload.region,\r\n                name: action.payload.name,\r\n            };\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n    return state;\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}